name: Build and Deploy Python Demo

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/python-demo

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate lowercase tags
      id: meta
      run: |
        IMAGE_NAME_LOWER=$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
        echo "image_name_lower=$IMAGE_NAME_LOWER" >> $GITHUB_ENV

        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "tags=${{ env.REGISTRY }}/$IMAGE_NAME_LOWER:latest" >> $GITHUB_OUTPUT
        else
          REF_NAME=$(echo "${{ github.ref_name }}" | sed 's/\//-/g')
          echo "tags=${{ env.REGISTRY }}/$IMAGE_NAME_LOWER:${REF_NAME}" >> $GITHUB_OUTPUT
        fi

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: '1.28.0'

    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Test kubectl connection
      run: |
        kubectl cluster-info
        kubectl get nodes

    - name: Update values.yaml for GitHub Container Registry
      run: |
        sed -i 's|repository: python-demo|repository: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}|g' python-demo-chart/values.yaml
        sed -i 's|tag: "latest"|tag: "latest"|g' python-demo-chart/values.yaml

    - name: Helm Deploy
      run: |
        helm upgrade --install python-demo-app ./python-demo-chart \
          --namespace python-demo \
          --create-namespace \
          --wait \
          --timeout=300s

    - name: Verify Deployment
      run: |
        kubectl get pods -n python-demo
        kubectl get services -n python-demo

    - name: Get Service URL (minikube)
      run: |
        echo "Service URL:"
        echo "Run 'minikube service python-demo-app-python-demo-chart -n python-demo --url' to get the service URL"

